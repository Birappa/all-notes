=======================Spring Core===================
- spring conatainers - BeanFactory and ApplicationContext

-ApplicationContext is built top of BeanFactory and having more enterprise features.

==========Inversion of control=======
-we don't create object.
-object shall be configured in xml file and created by spring conatiner.
- Control of object is given to spring conatainer.
- complete life cycle of object is managed by container. creation, destroy, etc.

======================Dependency Injection===================
- it reduces the complexity of programming code.
- it makes programming loosely coupled.
- it searches dependency and inject object using container.
- using dependency injection inversion of control is achieved.
 
  
================Annotations==============================
@RestController
@Controller
@RequestMapping
@PathVariable
@RequestParam
@ModelAttribute
@RequestBody and @ResponseBody
@RequestHeader and @ResponseHeader
@SpringBootApplication
@EnableAutoConfiguration
@Configuration: Used to indicate that a class declares one or more @Bean methods. These classes are processed by the Spring container to generate bean definitions and service requests for those beans at runtime.
@Bean: Indicates that a method produces a bean to be managed by the Spring container.
@ComponentScan: Configures component scanning directives for use with @Configuration classes. Here we can specify the base packages to scan for spring components.
@Component: Indicates that an annotated class is a “component”. Such classes are considered as candidates for auto-detection when using annotation-based configuration and classpath scanning.
@Service: Indicates that an annotated class is a “Service”. This annotation serves as a specialization of @Component, allowing for implementation classes to be autodetected through classpath scanning.
@Repository: Indicates that an annotated class is a “Repository”. This annotation serves as a specialization of @Component and advisable to use with DAO classes.
@Autowired: Spring @Autowired annotation is used for automatic injection of beans. Spring @Qualifier annotation is used in conjunction with Autowired to avoid confusion when we have two of more bean configured for same type
@CrossOrigin
@ExceptionHandler
@ControllerAdvice
@EnableEurekaServer
@EnableDiscoveryClient
@EnableCircuitBreaker











======================Array vs vector==========================
Vector is dynamically growth, they resizable in nature
vector is syncronized


============Comparable vs Comparator==============
Comparable is  used to compare instances of its own classes where comparator is used to compare two different objects.

comparable is single sorting sequence means only one property can use for compare like id, name or salary.
Where as comparator is multiple sorting sequence means can use multiple variable to compare like id , name.

